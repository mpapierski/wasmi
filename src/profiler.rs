use core::time::Duration;

use crate::isa;


#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]
pub enum Instruction {
    GetLocal,
    SetLocal,
    TeeLocal,
    Br,
    BrIfEqz,
    BrIfNez,
    BrTable,
    Unreachable,
    Return,
    Call,
    CallIndirect,
    Drop,
    Select,
    GetGlobal,
    SetGlobal,
    I32Load,
    I64Load,
    F32Load,
    F64Load,
    I32Load8S,
    I32Load8U,
    I32Load16S,
    I32Load16U,
    I64Load8S,
    I64Load8U,
    I64Load16S,
    I64Load16U,
    I64Load32S,
    I64Load32U,
    I32Store,
    I64Store,
    F32Store,
    F64Store,
    I32Store8,
    I32Store16,
    I64Store8,
    I64Store16,
    I64Store32,
    CurrentMemory,
    GrowMemory,
    I32Const,
    I64Const,
    F32Const,
    F64Const,
    I32Eqz,
    I32Eq,
    I32Ne,
    I32LtS,
    I32LtU,
    I32GtS,
    I32GtU,
    I32LeS,
    I32LeU,
    I32GeS,
    I32GeU,
    I64Eqz,
    I64Eq,
    I64Ne,
    I64LtS,
    I64LtU,
    I64GtS,
    I64GtU,
    I64LeS,
    I64LeU,
    I64GeS,
    I64GeU,
    F32Eq,
    F32Ne,
    F32Lt,
    F32Gt,
    F32Le,
    F32Ge,
    F64Eq,
    F64Ne,
    F64Lt,
    F64Gt,
    F64Le,
    F64Ge,
    I32Clz,
    I32Ctz,
    I32Popcnt,
    I32Add,
    I32Sub,
    I32Mul,
    I32DivS,
    I32DivU,
    I32RemS,
    I32RemU,
    I32And,
    I32Or,
    I32Xor,
    I32Shl,
    I32ShrS,
    I32ShrU,
    I32Rotl,
    I32Rotr,
    I64Clz,
    I64Ctz,
    I64Popcnt,
    I64Add,
    I64Sub,
    I64Mul,
    I64DivS,
    I64DivU,
    I64RemS,
    I64RemU,
    I64And,
    I64Or,
    I64Xor,
    I64Shl,
    I64ShrS,
    I64ShrU,
    I64Rotl,
    I64Rotr,
    F32Abs,
    F32Neg,
    F32Ceil,
    F32Floor,
    F32Trunc,
    F32Nearest,
    F32Sqrt,
    F32Add,
    F32Sub,
    F32Mul,
    F32Div,
    F32Min,
    F32Max,
    F32Copysign,
    F64Abs,
    F64Neg,
    F64Ceil,
    F64Floor,
    F64Trunc,
    F64Nearest,
    F64Sqrt,
    F64Add,
    F64Sub,
    F64Mul,
    F64Div,
    F64Min,
    F64Max,
    F64Copysign,
    I32WrapI64,
    I32TruncSF32,
    I32TruncUF32,
    I32TruncSF64,
    I32TruncUF64,
    I64ExtendSI32,
    I64ExtendUI32,
    I64TruncSF32,
    I64TruncUF32,
    I64TruncSF64,
    I64TruncUF64,
    F32ConvertSI32,
    F32ConvertUI32,
    F32ConvertSI64,
    F32ConvertUI64,
    F32DemoteF64,
    F64ConvertSI32,
    F64ConvertUI32,
    F64ConvertSI64,
    F64ConvertUI64,
    F64PromoteF32,
    I32ReinterpretF32,
    I64ReinterpretF64,
    F32ReinterpretI32,
    F64ReinterpretI64,
}

impl From<isa::Instruction<'_>> for Instruction {
    fn from(instruction: isa::Instruction<'_>) -> Self {
        match instruction {
            isa::Instruction::GetLocal(_) => Instruction::GetLocal,
            isa::Instruction::SetLocal(_) => Instruction::SetLocal,
            isa::Instruction::TeeLocal(_) => Instruction::TeeLocal,
            isa::Instruction::Br(_) => Instruction::Br,
            isa::Instruction::BrIfEqz(_) => Instruction::BrIfEqz,
            isa::Instruction::BrIfNez(_) => Instruction::BrIfNez,
            isa::Instruction::BrTable(_) => Instruction::BrTable,
            isa::Instruction::Unreachable => Instruction::Unreachable,
            isa::Instruction::Return(_) => Instruction::Return,
            isa::Instruction::Call(_) => Instruction::Call,
            isa::Instruction::CallIndirect(_) => Instruction::CallIndirect,
            isa::Instruction::Drop => Instruction::Drop,
            isa::Instruction::Select => Instruction::Select,
            isa::Instruction::GetGlobal(_) => Instruction::GetGlobal,
            isa::Instruction::SetGlobal(_) => Instruction::SetGlobal,
            isa::Instruction::I32Load(_) => Instruction::I32Load,
            isa::Instruction::I64Load(_) => Instruction::I64Load,
            isa::Instruction::F32Load(_) => Instruction::F32Load,
            isa::Instruction::F64Load(_) => Instruction::F64Load,
            isa::Instruction::I32Load8S(_) => Instruction::I32Load8S,
            isa::Instruction::I32Load8U(_) => Instruction::I32Load8U,
            isa::Instruction::I32Load16S(_) => Instruction::I32Load16S,
            isa::Instruction::I32Load16U(_) => Instruction::I32Load16U,
            isa::Instruction::I64Load8S(_) => Instruction::I64Load8S,
            isa::Instruction::I64Load8U(_) => Instruction::I64Load8U,
            isa::Instruction::I64Load16S(_) => Instruction::I64Load16S,
            isa::Instruction::I64Load16U(_) => Instruction::I64Load16U,
            isa::Instruction::I64Load32S(_) => Instruction::I64Load32S,
            isa::Instruction::I64Load32U(_) => Instruction::I64Load32U,
            isa::Instruction::I32Store(_) => Instruction::I32Store,
            isa::Instruction::I64Store(_) => Instruction::I64Store,
            isa::Instruction::F32Store(_) => Instruction::F32Store,
            isa::Instruction::F64Store(_) => Instruction::F64Store,
            isa::Instruction::I32Store8(_) => Instruction::I32Store8,
            isa::Instruction::I32Store16(_) => Instruction::I32Store16,
            isa::Instruction::I64Store8(_) => Instruction::I64Store8,
            isa::Instruction::I64Store16(_) => Instruction::I64Store16,
            isa::Instruction::I64Store32(_) => Instruction::I64Store32,
            isa::Instruction::CurrentMemory => Instruction::CurrentMemory,
            isa::Instruction::GrowMemory => Instruction::GrowMemory,
            isa::Instruction::I32Const(_) => Instruction::I32Const,
            isa::Instruction::I64Const(_) => Instruction::I64Const,
            isa::Instruction::F32Const(_) => Instruction::F32Const,
            isa::Instruction::F64Const(_) => Instruction::F64Const,
            isa::Instruction::I32Eqz => Instruction::I32Eqz,
            isa::Instruction::I32Eq => Instruction::I32Eq,
            isa::Instruction::I32Ne => Instruction::I32Ne,
            isa::Instruction::I32LtS => Instruction::I32LtS,
            isa::Instruction::I32LtU => Instruction::I32LtU,
            isa::Instruction::I32GtS => Instruction::I32GtS,
            isa::Instruction::I32GtU => Instruction::I32GtU,
            isa::Instruction::I32LeS => Instruction::I32LeS,
            isa::Instruction::I32LeU => Instruction::I32LeU,
            isa::Instruction::I32GeS => Instruction::I32GeS,
            isa::Instruction::I32GeU => Instruction::I32GeU,
            isa::Instruction::I64Eqz => Instruction::I64Eqz,
            isa::Instruction::I64Eq => Instruction::I64Eq,
            isa::Instruction::I64Ne => Instruction::I64Ne,
            isa::Instruction::I64LtS => Instruction::I64LtS,
            isa::Instruction::I64LtU => Instruction::I64LtU,
            isa::Instruction::I64GtS => Instruction::I64GtS,
            isa::Instruction::I64GtU => Instruction::I64GtU,
            isa::Instruction::I64LeS => Instruction::I64LeS,
            isa::Instruction::I64LeU => Instruction::I64LeU,
            isa::Instruction::I64GeS => Instruction::I64GeS,
            isa::Instruction::I64GeU => Instruction::I64GeU,
            isa::Instruction::F32Eq => Instruction::F32Eq,
            isa::Instruction::F32Ne => Instruction::F32Ne,
            isa::Instruction::F32Lt => Instruction::F32Lt,
            isa::Instruction::F32Gt => Instruction::F32Gt,
            isa::Instruction::F32Le => Instruction::F32Le,
            isa::Instruction::F32Ge => Instruction::F32Ge,
            isa::Instruction::F64Eq => Instruction::F64Eq,
            isa::Instruction::F64Ne => Instruction::F64Ne,
            isa::Instruction::F64Lt => Instruction::F64Lt,
            isa::Instruction::F64Gt => Instruction::F64Gt,
            isa::Instruction::F64Le => Instruction::F64Le,
            isa::Instruction::F64Ge => Instruction::F64Ge,
            isa::Instruction::I32Clz => Instruction::I32Clz,
            isa::Instruction::I32Ctz => Instruction::I32Ctz,
            isa::Instruction::I32Popcnt => Instruction::I32Popcnt,
            isa::Instruction::I32Add => Instruction::I32Add,
            isa::Instruction::I32Sub => Instruction::I32Sub,
            isa::Instruction::I32Mul => Instruction::I32Mul,
            isa::Instruction::I32DivS => Instruction::I32DivS,
            isa::Instruction::I32DivU => Instruction::I32DivU,
            isa::Instruction::I32RemS => Instruction::I32RemS,
            isa::Instruction::I32RemU => Instruction::I32RemU,
            isa::Instruction::I32And => Instruction::I32And,
            isa::Instruction::I32Or => Instruction::I32Or,
            isa::Instruction::I32Xor => Instruction::I32Xor,
            isa::Instruction::I32Shl => Instruction::I32Shl,
            isa::Instruction::I32ShrS => Instruction::I32ShrS,
            isa::Instruction::I32ShrU => Instruction::I32ShrU,
            isa::Instruction::I32Rotl => Instruction::I32Rotl,
            isa::Instruction::I32Rotr => Instruction::I32Rotr,
            isa::Instruction::I64Clz => Instruction::I64Clz,
            isa::Instruction::I64Ctz => Instruction::I64Ctz,
            isa::Instruction::I64Popcnt => Instruction::I64Popcnt,
            isa::Instruction::I64Add => Instruction::I64Add,
            isa::Instruction::I64Sub => Instruction::I64Sub,
            isa::Instruction::I64Mul => Instruction::I64Mul,
            isa::Instruction::I64DivS => Instruction::I64DivS,
            isa::Instruction::I64DivU => Instruction::I64DivU,
            isa::Instruction::I64RemS => Instruction::I64RemS,
            isa::Instruction::I64RemU => Instruction::I64RemU,
            isa::Instruction::I64And => Instruction::I64And,
            isa::Instruction::I64Or => Instruction::I64Or,
            isa::Instruction::I64Xor => Instruction::I64Xor,
            isa::Instruction::I64Shl => Instruction::I64Shl,
            isa::Instruction::I64ShrS => Instruction::I64ShrS,
            isa::Instruction::I64ShrU => Instruction::I64ShrU,
            isa::Instruction::I64Rotl => Instruction::I64Rotl,
            isa::Instruction::I64Rotr => Instruction::I64Rotr,
            isa::Instruction::F32Abs => Instruction::F32Abs,
            isa::Instruction::F32Neg => Instruction::F32Neg,
            isa::Instruction::F32Ceil => Instruction::F32Ceil,
            isa::Instruction::F32Floor => Instruction::F32Floor,
            isa::Instruction::F32Trunc => Instruction::F32Trunc,
            isa::Instruction::F32Nearest => Instruction::F32Nearest,
            isa::Instruction::F32Sqrt => Instruction::F32Sqrt,
            isa::Instruction::F32Add => Instruction::F32Add,
            isa::Instruction::F32Sub => Instruction::F32Sub,
            isa::Instruction::F32Mul => Instruction::F32Mul,
            isa::Instruction::F32Div => Instruction::F32Div,
            isa::Instruction::F32Min => Instruction::F32Min,
            isa::Instruction::F32Max => Instruction::F32Max,
            isa::Instruction::F32Copysign => Instruction::F32Copysign,
            isa::Instruction::F64Abs => Instruction::F64Abs,
            isa::Instruction::F64Neg => Instruction::F64Neg,
            isa::Instruction::F64Ceil => Instruction::F64Ceil,
            isa::Instruction::F64Floor => Instruction::F64Floor,
            isa::Instruction::F64Trunc => Instruction::F64Trunc,
            isa::Instruction::F64Nearest => Instruction::F64Nearest,
            isa::Instruction::F64Sqrt => Instruction::F64Sqrt,
            isa::Instruction::F64Add => Instruction::F64Add,
            isa::Instruction::F64Sub => Instruction::F64Sub,
            isa::Instruction::F64Mul => Instruction::F64Mul,
            isa::Instruction::F64Div => Instruction::F64Div,
            isa::Instruction::F64Min => Instruction::F64Min,
            isa::Instruction::F64Max => Instruction::F64Max,
            isa::Instruction::F64Copysign => Instruction::F64Copysign,
            isa::Instruction::I32WrapI64 => Instruction::I32WrapI64,
            isa::Instruction::I32TruncSF32 => Instruction::I32TruncSF32,
            isa::Instruction::I32TruncUF32 => Instruction::I32TruncUF32,
            isa::Instruction::I32TruncSF64 => Instruction::I32TruncSF64,
            isa::Instruction::I32TruncUF64 => Instruction::I32TruncUF64,
            isa::Instruction::I64ExtendSI32 => Instruction::I64ExtendSI32,
            isa::Instruction::I64ExtendUI32 => Instruction::I64ExtendUI32,
            isa::Instruction::I64TruncSF32 => Instruction::I64TruncSF32,
            isa::Instruction::I64TruncUF32 => Instruction::I64TruncUF32,
            isa::Instruction::I64TruncSF64 => Instruction::I64TruncSF64,
            isa::Instruction::I64TruncUF64 => Instruction::I64TruncUF64,
            isa::Instruction::F32ConvertSI32 => Instruction::F32ConvertSI32,
            isa::Instruction::F32ConvertUI32 => Instruction::F32ConvertUI32,
            isa::Instruction::F32ConvertSI64 => Instruction::F32ConvertSI64,
            isa::Instruction::F32ConvertUI64 => Instruction::F32ConvertUI64,
            isa::Instruction::F32DemoteF64 => Instruction::F32DemoteF64,
            isa::Instruction::F64ConvertSI32 => Instruction::F64ConvertSI32,
            isa::Instruction::F64ConvertUI32 => Instruction::F64ConvertUI32,
            isa::Instruction::F64ConvertSI64 => Instruction::F64ConvertSI64,
            isa::Instruction::F64ConvertUI64 => Instruction::F64ConvertUI64,
            isa::Instruction::F64PromoteF32 => Instruction::F64PromoteF32,
            isa::Instruction::I32ReinterpretF32 => Instruction::I32ReinterpretF32,
            isa::Instruction::I64ReinterpretF64 => Instruction::I64ReinterpretF64,
            isa::Instruction::F32ReinterpretI32 => Instruction::F32ReinterpretI32,
            isa::Instruction::F64ReinterpretI64 => Instruction::F64ReinterpretI64,
        }
    }
}

pub trait Profiler {
    type Timestamp;

    fn sample_time(&mut self) -> Self::Timestamp;

    fn trace<'a>(&mut self, instruction: Instruction, _timestamp: Self::Timestamp) {}
}

#[derive(Default)]
pub struct NoopProfiler(());

impl Profiler for NoopProfiler {
    type Timestamp = ();

    fn sample_time(&mut self) -> Self::Timestamp {
        ()
    }

    fn trace<'a>(&mut self, instruction: Instruction, _timestamp: Self::Timestamp) {
    }
}
